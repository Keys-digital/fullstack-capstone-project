{"ast":null,"code":"var _jsxFileName = \"/home/project/fullstack-capstone-project/giftlink-frontend/src/components/MainPage/MainPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { urlConfig } from '../../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MainPage() {\n  _s();\n  const [gifts, setGifts] = useState([]);\n  const [loading, setLoading] = useState(true); // New state for loading\n  const [error, setError] = useState(null); // New state for error\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Task 1: Write async fetch operation\n    const fetchGifts = async () => {\n      try {\n        let url = `${urlConfig.backendUrl}/api/gifts`;\n        const response = await fetch(url);\n        if (!response.ok) {\n          throw new Error(`HTTP error; ${response.status}`);\n        }\n        const data = await response.json();\n        setGifts(data);\n        setLoading(false); // Set loading to false when data is fetched\n      } catch (error) {\n        setError(error.message); // Store error message\n        setLoading(false); // Set loading to false on error\n      }\n    };\n    fetchGifts();\n  }, []);\n\n  // Task 2: Navigate to details page\n  const goToDetailsPage = productId => {\n    navigate(`/app/product/${productId}`);\n  };\n\n  // Task 3: Format timestamp\n  const formatDate = timestamp => {\n    const date = new Date(timestamp * 1000);\n    return date.toLocaleDateString('default', {\n      month: 'long',\n      day: 'numeric',\n      year: 'numeric'\n    });\n  };\n  const getConditionClass = condition => {\n    return condition === \"New\" ? \"list-group-item-success\" : \"list-group-item-warning\";\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-5\",\n      children: \"Loading gifts...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 16\n    }, this); // Loading message\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-5\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 16\n    }, this); // Display error message if any\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: gifts.map(gift => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4 mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card product-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-placeholder\",\n            children: gift.image ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: gift.image,\n              alt: gift.name,\n              className: \"card-img-top\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"no-image-available\",\n              children: \"No Image Available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title\",\n              children: gift.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: `card-text ${getConditionClass(gift.condition)}`,\n              children: gift.condition\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: formatDate(gift.date_added)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => goToDetailsPage(gift.id),\n              className: \"btn btn-primary\",\n              children: \"View Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this)\n      }, gift.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(MainPage, \"YHca/TpsqvQ4TRq/fXaYEKfpNYc=\", false, function () {\n  return [useNavigate];\n});\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","urlConfig","jsxDEV","_jsxDEV","MainPage","_s","gifts","setGifts","loading","setLoading","error","setError","navigate","fetchGifts","url","backendUrl","response","fetch","ok","Error","status","data","json","message","goToDetailsPage","productId","formatDate","timestamp","date","Date","toLocaleDateString","month","day","year","getConditionClass","condition","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","gift","image","src","alt","name","date_added","onClick","id","_c","$RefreshReg$"],"sources":["/home/project/fullstack-capstone-project/giftlink-frontend/src/components/MainPage/MainPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'; \nimport { useNavigate } from 'react-router-dom';\nimport { urlConfig } from '../../config';\n\nfunction MainPage() {\n    const [gifts, setGifts] = useState([]);\n    const [loading, setLoading] = useState(true);  // New state for loading\n    const [error, setError] = useState(null);  // New state for error\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        // Task 1: Write async fetch operation\n        const fetchGifts = async () => {\n            try {\n                let url = `${urlConfig.backendUrl}/api/gifts`;\n                const response = await fetch(url);\n                if (!response.ok) {\n                    throw new Error(`HTTP error; ${response.status}`);\n                }\n                const data = await response.json();\n                setGifts(data);\n                setLoading(false); // Set loading to false when data is fetched\n            } catch (error) {\n                setError(error.message);  // Store error message\n                setLoading(false);  // Set loading to false on error\n            }\n        };\n\n        fetchGifts();\n    }, []);\n\n    // Task 2: Navigate to details page\n    const goToDetailsPage = (productId) => {\n        navigate(`/app/product/${productId}`);\n    };\n\n    // Task 3: Format timestamp\n    const formatDate = (timestamp) => {\n        const date = new Date(timestamp * 1000);\n        return date.toLocaleDateString('default', { month: 'long', day: 'numeric', year: 'numeric' });\n    };\n\n    const getConditionClass = (condition) => {\n        return condition === \"New\" ? \"list-group-item-success\" : \"list-group-item-warning\";\n    };\n\n    if (loading) {\n        return <div className=\"container mt-5\">Loading gifts...</div>;  // Loading message\n    }\n\n    if (error) {\n        return <div className=\"container mt-5\">Error: {error}</div>;  // Display error message if any\n    }\n\n    return (\n        <div className=\"container mt-5\">\n            <div className=\"row\">\n                {gifts.map((gift) => (\n                    <div key={gift.id} className=\"col-md-4 mb-4\">\n                        <div className=\"card product-card\">\n\n                            {/* Task 4: Display gift image or placeholder */}\n                            <div className=\"image-placeholder\">\n                                {gift.image ? (\n                                    <img src={gift.image} alt={gift.name} className=\"card-img-top\" />\n                                ) : (\n                                    <div className=\"no-image-available\">No Image Available</div>\n                                )}\n                            </div>\n\n                            <div className=\"card-body\">\n                                {/* Task 5: Display gift name */}\n                                <h5 className=\"card-title\">{gift.name}</h5>\n\n                                <p className={`card-text ${getConditionClass(gift.condition)}`}>\n                                    {gift.condition}\n                                </p>\n\n                                {/* Task 6: Display formatted date */}\n                                <p className=\"card-text\">{formatDate(gift.date_added)}</p>\n\n                                <button onClick={() => goToDetailsPage(gift.id)} className=\"btn btn-primary\">\n                                    View Details\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default MainPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}